// Code generated by goctl. DO NOT EDIT.
// Source: borrow.proto

package server

import (
	"context"

	"bookstore/rpc/borrow/borrow"
	"bookstore/rpc/borrow/internal/logic"
	"bookstore/rpc/borrow/internal/svc"
)

type BorrowerServer struct {
	svcCtx *svc.ServiceContext
	borrow.UnimplementedBorrowerServer
}

func NewBorrowerServer(svcCtx *svc.ServiceContext) *BorrowerServer {
	return &BorrowerServer{
		svcCtx: svcCtx,
	}
}

func (s *BorrowerServer) Add(ctx context.Context, in *borrow.BorrowReq) (*borrow.BorrowResp, error) {
	l := logic.NewAddLogic(ctx, s.svcCtx)
	return l.Add(in)
}

func (s *BorrowerServer) List(in *borrow.BorrowReq, stream borrow.Borrower_ListServer) error {
	l := logic.NewListLogic(stream.Context(), s.svcCtx)
	return l.List(in, stream)
}
